---
---

/*
*  __  __                                ___       __                                                  
* /\ \/\ \  __                          /\_ \     /\ \                                                 
* \ \ \ \ \/\_\    ____  __  __     __  \//\ \    \ \ \         __      ___   __  __    ___     ___    
*  \ \ \ \ \/\ \  /',__\/\ \/\ \  /'__`\  \ \ \    \ \ \  __  /'__`\  /' _ `\/\ \/\ \  / __`\ /' _ `\  
*   \ \ \_/ \ \ \/\__, `\ \ \_\ \/\ \L\.\_ \_\ \_   \ \ \L\ \/\ \L\.\_/\ \/\ \ \ \_\ \/\ \L\ \/\ \/\ \ 
*    \ `\___/\ \_\/\____/\ \____/\ \__/.\_\/\____\   \ \____/\ \__/.\_\ \_\ \_\/`____ \ \____/\ \_\ \_\
*     `\/__/  \/_/\/___/  \/___/  \/__/\/_/\/____/    \/___/  \/__/\/_/\/_/\/_/`/___/> \/___/  \/_/\/_/
*                                                                                 /\___/               
*                                                                                 \/__/                
*                                                                                                     
* Written by @ZaMan8 and distrobuted under the MIT license.
* Learn more at https://github.com/Zaman8/visual-lanyon 
*
*
* Contents:
* 
* Masthead Buttons
* Social Media Links
* Author About Section
* Preview Cards
*/                                                                                                     
                                                                                                     

/*
* Masthead Buttons
*
* Style rss and light-theme buttons on masthead
*/

.icon {
    //place the svg within the button
    display: block;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    position: absolute;
}

//Theme Switcher Button

//set position of button in top right corner
#theme-switcher {
    position: absolute;
    top: 1.1rem;
    right: 1rem;
    cursor: pointer;
    height: 24px;
    width: 24px;

    //set svg as mask (allowing us to change the color depending on the state)
    .icon {
        -webkit-mask-image: url('data:image/svg+xml,<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" role="img"><circle cx="8" cy="8" r="7.25" stroke="%235B5B66" stroke-width="1.5"/><mask id="a" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="16" height="16"><circle cx="8" cy="8" r="7.25" fill="%235B5B66" stroke="%235B5B66" stroke-width="1.5"/></mask><g mask="url(%23a)"><path fill="%235B5B66" d="M0 0h8v16H0z"/></g></svg>');
        mask-image: url('data:image/svg+xml,<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" role="img"><circle cx="8" cy="8" r="7.25" stroke="%235B5B66" stroke-width="1.5"/><mask id="a" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="16" height="16"><circle cx="8" cy="8" r="7.25" fill="%235B5B66" stroke="%235B5B66" stroke-width="1.5"/></mask><g mask="url(%23a)"><path fill="%235B5B66" d="M0 0h8v16H0z"/></g></svg>');
        mask-repeat: no-repeat;
    }
}

#rss-feed {
    position: absolute;
    top: 1.1rem;
    right: 3rem;
    cursor: pointer;
    height: 24px;
    width: 24px;

    .icon {
        -webkit-mask-image: url('/assets/site/rss-solid.svg');
        mask-image: url('/assets/site//rss-solid.svg');
        mask-repeat: no-repeat;
    }
}

//override global default styling of buttons
//make button invisible so only svg icon is shown
button {
    background: none;
    border: none;
    margin: 0rem;
    padding: 0;

}

/*
* Social Media Links
*
* Create display of user's social media links
*/

.about {
    position: relative;
    top: 1rem;
    margin-top: 1rem;
    margin-bottom: 1rem;
}

#social-media-icons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 1rem;

    img {
        height: 1.5rem;
        width: 1.5rem;
        margin: 0.5rem;
    }
}

/*
* Auther About Section
*
* Display short bio of author in sidebar
*/

#author-about {
    margin: 1rem;

    img {
        height: 6rem;
        width: 6rem;
        border-width: 0.5rem;
        overflow: hidden;
        border-radius: 50%;
    }
}

/*
* Preview Cards
*
* Creates base reusable styling for cards and defines styles to create new card layouts
* different cards only differ in width, height, and font size.
* Some cards use different non-overlayed image locations, so those stylings are define individually later.
*/


//set div display to flexbox and center cards
.posts {
    display: flex;
    flex-wrap: wrap;
    justify-content: left;
}

//reusable common card styling, creates shape, animation, color, and clickability
.card {
    //create shadow, rounded edges, and space out cards. Hide any overflow
    border-radius: 0.5rem;
    box-shadow: 0.05rem 0rem 0.25rem 0.3rem rgba(0, 0, 0, 0.05);

    padding: 0.5rem;
    padding-bottom: 1rem;
    margin: 0.5rem;

    overflow: hidden;

    .post-content {
        font-size: smaller;
    }

    //create animation to 'elevate' card on hover
    &:hover {
        transition: all .2s ease-in-out; 
        transform: scale(1.02); 
    }
    transition: all .2s ease-in-out;
    transform: scale(1);

    //make card a clickable link by placing a linked span in front of it
    & > a:first-of-type > span {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 2;
    }
}


//reused code to set the card background as an image when specified in the post front matter
div.overlayed {

    //special styling so text is easier to read over image
    text-shadow: 0.05rem 0rem 0.25rem black;
    color: #f0f0f0;

    .post-title > a, h1, h2, h3, h4, h5, h6 {
        color: #f1f1f1;
    }
    .post-date {
        color: #dddcdc;
    }

    //image positioning and resizing
    //will center images and crop to card dimensions

    display:block;
    background-position: center;

    & > .preview-image {
        //apply image filters to help readability
        filter:brightness(75%);

        margin: -0.5rem;
        margin-bottom: -1rem;

        //will stretch image to fit, but most images are bigger than viewport anyway
        position: absolute;
        min-width: 100%;
        min-height: 100%;

        //place card in center so when overflowed we see the center of the image
        //not sure why left must be 51% and not 50
        left: 51%;
        top: 50%;
        -webkit-transform: translate(-50%,-50%);
        -ms-transform: translate(-50%,-50%);
        transform: translate(-50%,-50%);

    }

    //make sure post-content preview is above image
    & > .post-content {
        position: relative;
        z-index: 1;
    }
}

/*
* Specific Card Layouts
* apply individual stylings to create the different sized cards in this theme
* since small and large cards center their text when overlayed another (card).overlay styling is here
*/

//mixin to define individual card differences.
//use an informal row height of 10rem and define card heights as integer multiples of this.
@mixin cardsizing($width, $height, $h1size) {
    width: calc($width - 1rem); //subtract 1 rem to account for card margins
    max-height: calc($height * 10rem);
    & > h1 {
        font-size: $h1size;
    }
}


//extended selectors to create two column card layout when no image overlay. 
//Places content left, and image right
%two-column {
    //put image on right when not overlayed
    &:not(.overlayed) > img.preview-image {
        margin: -0.5rem;
        margin-left: 0.5rem;
        margin-bottom: -1rem;

        //scale image to match the height of the card, width adjusts within max range
        height: calc(100% + 1.5rem);
        width: auto;
        max-width: 50%;
        border-radius: 0rem;
    }

     //create flexbox to shrink content and image to fit in card
    display: flex;
    justify-content: space-between;
    flex-direction: row-reverse; //ensures picture is on right. row would place on left
}

%two-row {
        //when not overlaying image put image across the top
        &:not(.overlayed) > img.preview-image {
            margin: -0.5rem;
            margin-bottom: 0.5rem;
    
            min-width: 100%;
            max-height: 40%;
            border-radius: 0rem;
    
        }
    
        //create flexbox to shrink and place content and image correctly
        display: flex;
        flex-direction: column;
}

//Extended selector for cards that center text when image is overlayed
%centered-overlay {
    height: 90rem; //set extremely hight height to force use of max-height defined in card styling
    
    //center text horizontally and vertically within card
    text-align: center;
    & > .post-content {
        position: absolute;
        left: 50%;
        top: 50%;
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        z-index: 1;
    }
}

/*
* Start defining individual card layouts
* Uses class .overlayed to style content differently when necassary
*/

.small_card {
    @include cardsizing(25%, 1, 1.5rem);

    &.overlayed {
        //place text in center of card when overlayed
        @extend %centered-overlay;
    }
}

.double_card{
    @include cardsizing(50%, 1, 2rem);
    @extend %two-column;
}

.wide_card {
    @include cardsizing(100%, 1, 2rem);
    @extend %two-column;
}

.large_card {
    @include cardsizing(100%, 3, 2.5rem);
    @extend %two-row;

    &.overlayed {
        //center and enlarge text when overlayed
        font-size: larger;
        @extend %centered-overlay;
    }
}

.tall_card {
    @include cardsizing(25%, 2, 1.5rem);
    height: calc(2*10rem); //force height to be '2 rows'
    @extend %two-row;
}

.square_card {
    @include cardsizing(50%, 2, 1.5rem);
    height: calc(2*10rem); //force height to be '2 rows'
    @extend %two-row;
}

